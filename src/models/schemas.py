from pydantic import BaseModel, Field
from typing import Dict, List, Optional, Any
from datetime import datetime
from enum import Enum

class LogSource(str, Enum):
    SYSLOG = "syslog"
    MYSQL = "mysql"
    WINDOWS_EVENT = "windows_event"

class SeverityLevel(str, Enum):
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    CRITICAL = "critical"

class AlertStatus(str, Enum):
    NEW = "new"
    INVESTIGATING = "investigating"
    RESOLVED = "resolved"
    FALSE_POSITIVE = "false_positive"

class RawLogEntry(BaseModel):
    """Raw log entry from various sources"""
    id: Optional[str] = None
    source: LogSource
    timestamp: datetime
    raw_data: str
    source_ip: Optional[str] = None
    destination_ip: Optional[str] = None
    user: Optional[str] = None
    event_type: Optional[str] = None
    log_metadata: Dict[str, Any] = Field(default_factory=dict)

class NormalizedLogEntry(BaseModel):
    """Normalized log entry with standardized schema"""
    id: str
    source: LogSource
    timestamp: datetime
    event_type: str
    source_ip: Optional[str] = None
    destination_ip: Optional[str] = None
    user: Optional[str] = None
    process: Optional[str] = None
    command: Optional[str] = None
    file_path: Optional[str] = None
    port: Optional[int] = None
    protocol: Optional[str] = None
    status_code: Optional[int] = None
    message: str
    severity: str = "info"
    tags: List[str] = Field(default_factory=list)
    log_metadata: Dict[str, Any] = Field(default_factory=dict)

class AnomalyResult(BaseModel):
    """Result from LLM-1 Anomaly Detection"""
    log_id: str
    is_anomalous: bool
    anomaly_score: float = Field(ge=0.0, le=1.0)
    anomaly_type: Optional[str] = None
    reasoning: str
    confidence: float = Field(ge=0.0, le=1.0)
    timestamp: datetime = Field(default_factory=datetime.now)

class ThreatIntelResult(BaseModel):
    """Result from LLM-2 Threat Intelligence Verification"""
    log_id: str
    is_threat: bool
    threat_type: Optional[str] = None
    ioc_matches: List[str] = Field(default_factory=list)
    threat_score: float = Field(ge=0.0, le=1.0)
    reasoning: str
    confidence: float = Field(ge=0.0, le=1.0)
    timestamp: datetime = Field(default_factory=datetime.now)

class CorrelationResult(BaseModel):
    """Result from LLM-3 Contextual Correlation"""
    log_id: str
    related_events: List[str] = Field(default_factory=list)
    correlation_score: float = Field(ge=0.0, le=1.0)
    context: Dict[str, Any] = Field(default_factory=dict)
    asset_criticality: str = "unknown"
    user_risk_level: str = "unknown"
    attack_pattern: Optional[str] = None
    reasoning: str
    confidence: float = Field(ge=0.0, le=1.0)
    timestamp: datetime = Field(default_factory=datetime.now)

class Alert(BaseModel):
    """Final alert generated by LLM-4"""
    id: str
    title: str
    description: str
    severity: SeverityLevel
    confidence: float = Field(ge=0.0, le=1.0)
    source_log_ids: List[str]
    entities: Dict[str, List[str]] = Field(default_factory=dict)  # IPs, users, processes, etc.
    attack_vector: Optional[str] = None
    recommended_actions: List[str] = Field(default_factory=list)
    status: AlertStatus = AlertStatus.NEW
    created_at: datetime = Field(default_factory=datetime.now)
    updated_at: datetime = Field(default_factory=datetime.now)
    analyst_notes: Optional[str] = None
    false_positive_reason: Optional[str] = None

class ProcessingStats(BaseModel):
    """Statistics for monitoring the processing pipeline"""
    total_logs_processed: int = 0
    anomalies_detected: int = 0
    threats_verified: int = 0
    alerts_generated: int = 0
    false_positives: int = 0
    processing_time_avg: float = 0.0
    last_updated: datetime = Field(default_factory=datetime.now)

class SystemHealth(BaseModel):
    """System health monitoring"""
    status: str = "healthy"
    llm_models_status: Dict[str, str] = Field(default_factory=dict)
    data_sources_status: Dict[str, str] = Field(default_factory=dict)
    processing_queue_size: int = 0
    memory_usage: float = 0.0
    cpu_usage: float = 0.0
    last_check: datetime = Field(default_factory=datetime.now)
